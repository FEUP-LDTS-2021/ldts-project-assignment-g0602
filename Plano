Plano Projeto Ldts:
Branch Develop
Branch Features
class Game:
	int TerminalCols, TerminalRows;
	gameStates.Arena, Screen;
	run()
	init() -> Inicia Screen, gameStates.Arena
	update() -> chama gameStates.Arena.update()
	draw() -> chama gameStates.Arena.draw()

class Level:
	int numLevel;
	string fileName;
	int[][] map


class gameStates.Arena:
	Level level;
	Player
	list<blocks>
	list<Enemys>
	buildArena(level) -> Percorrer level.getMap() criar objetos do mapa e coloca los nas listas

class element
	position x,y
	TextImage Image
	draw(TextGraphics)-> screen.drawImage(Pos,Image), apenas draw  dos visible = true
	update() abstract ->
	getBounds return Rectangle (topLeftX, topLeftY, width, height).
	Boolean Visible 

class Player extends element
	bool isLeft -> recebe input direita esquerda atualiza
	TextImage ImageLeft
	int health = 3
	int vx, vy
	movement input direita esquerda ->vx = 5, <-vx = -5,  
	jump
	update -> x+=vx, y+=vy 
	attack setas andam na horizontal dependendo para onde esta virado

class Enemy extends element
	int health 

class moveXEnemy extends enemy
	int range
	X,Y posicao mais esquerda 
	update -> if(x + 1>range), x -= 1, x++

class moveYEnemy extends enemy
	int range
	move se num range em y

class bossEnemy extends enemy
	

class factories.BlockFactory:
	metodo make(int) retorna elements.elements.Block obj perante o int que receber

class EnemyFactory:
	metodo make(int) retorna Enemy obj perante o int que receber

class LevelFactory:
